const {test,expect} = require('@playwright/test')
const{loginPage} = require('../../pages/login.page')
const{dashboardPage} = require('../../pages/dashboard.page')
const{recipessidebar} =require('../../pages/Recipes/recipessidebar.page')
const staticData = require('../../data/staticData')
const{chefPage} =require('../../pages/Recipes/chef.page') 

test('Recipe Chef Validation', async ({page}) =>{
    test.slow()
    const login = new loginPage(page)
    const dashboard = new dashboardPage(page)
    const recipessidebarpg = new recipessidebar(page)
    const chefpg = new chefPage(page)
    await login.gotoLoginPage()
    login.Login (staticData.email,staticData.password)
    await expect(dashboard.page).toHaveURL(staticData.dashboardUrl)
    await recipessidebarpg.RecipesNavDown()
    await chefpg.GotoChefPage()
    await expect(chefpg.page).toHaveURL(staticData.ChefUrl)
    await expect(chefpg.chefPgHeading).toBeVisible()
    await chefpg.selectStatus('true')
    await chefpg.ClearFillterButton()
    const entriesOption = await page.textContent(chefpg.showEntry)
    await expect (entriesOption).toContain('10')
    await expect (entriesOption).toContain('25')
    await expect (entriesOption).toContain('50')
    await expect (entriesOption).toContain('100')
    await chefpg.ShowingEntries()
    await chefpg.ChefPageSearchBar('Arla')
    await chefpg.AddNewButton()
    await chefpg.isInActiveRadioSelected()
    await chefpg.EnterChefName('test')
    await chefpg.selectCountry('Pakistan');
    const selectedCountry = await chefpg.getSelectedCountry();
    expect(selectedCountry).toEqual('167')
    await chefpg.uploadImage()
    await chefpg.SaveButton()
    await page.waitForTimeout(3000)
    await chefpg.NextButton()
    await page.waitForTimeout(3000)
    await chefpg.PerviousButton()
    await chefpg.ViewButton()
    await chefpg.ViewCloseButton()
    await chefpg.EditButton()
    await chefpg.EditSaveButton()
    await chefpg.DeleteButton()
    await chefpg.DeleteButtonYes()
    await chefpg.DeleteButtonOK()
    
}
)